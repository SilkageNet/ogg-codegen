// Code generated by ogg-codegen. DO NOT EDIT.
package swagger

import (
	"github.com/gin-gonic/gin"
	"github.com/gin-gonic/gin/render"
)

var _ render.Render

type Server interface {
	// 鉴权类接口
	// AuthTest test
	AuthTest(c *gin.Context, params *AuthTestParams) (*Response, error)
	// Logout 退出登录
	Logout(c *gin.Context, params *LogoutParams) (*Response, error)
	// PasswdLogin 手机密码登录接口；需通过滑块验证；
	PasswdLogin(c *gin.Context, params *PasswdLoginParams, body *PasswdLoginBody) (*PasswdLoginResponse, error)
	// SendCode 获取验证码接口；需通过滑块验证；验证码频率限制60秒一次。
	SendCode(c *gin.Context, params *SendCodeParams, body *SendCodeBody) (*SendCodeResponse, error)
	// SMSLogin 短信验证码登录接口
	SMSLogin(c *gin.Context, params *SMSLoginParams, body *SMSLoginBody) (*SMSLoginResponse, error)

	// 用户类接口
	// FetchUser 获取用户基本信息。
	FetchUser(c *gin.Context) error
	// SetPasswd 设置密码
	SetPasswd(c *gin.Context, params *SetPasswdParams, body *SetPasswdBody) (*Response, error)
	// UpdateUser 更新用户基础信息
	UpdateUser(c *gin.Context, params *UpdateUserParams, body *UpdateUserBody) (*Response, error)

	// 文件类接口
	// DownloadFile 下载文件
	DownloadFile(c *gin.Context, params *DownloadFileParams) (*FileData, error)
	// UploadFile 上传文件。
	UploadFile(c *gin.Context, params *UploadFileParams, body *UploadFileBody) (*UploadFileResponse, error)
}

func Register(engine *gin.Engine, server Server, fns ...OptionFunc) {
	var opt = defaultOption
	for _, fn := range fns {
		fn(opt)
	}
	var wrapper = &Wrapper{option: *opt, engine: engine, server: server}
	wrapper.SetupAuthRoutine()
	wrapper.SetupUserRoutine()
	wrapper.SetupFileRoutine()
}

type MockServer struct {
}
